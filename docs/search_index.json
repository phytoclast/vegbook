[["index.html", "Essentials of Vegetation Data Chapter 1 What is Vegetation? 1.1 Strata", " Essentials of Vegetation Data Greg J. Schmidt 2023-04-04 Chapter 1 What is Vegetation? There are two main attributes of vegetation: structure and composition. Structure is the physical manifestation of the plant community, including cover and height. Composition is the identity and abundance of the plant taxa making up the vegetation. Abundance can be rated as canopy cover, foliar cover, or biomass. According to the USNVC standard (FGDC 2008), canopy or crown cover is the most universal way to rate vegetation, as it is most closely coorelated to estimates of cover from remote sensing (aerial photos), though foliar cover might seem more correlated with leaf area index as determined by MODIS and Landsat satellites. (citation?). 1.1 Strata Height in vegetation inventory is organized into strata. The most basic is the distinction between overstory and understory. However, the US National Vegetation Classification (FGDC 2008) prescribes a tree stratum (5+ m), shrub stratum (0.5-5 m), and a field stratum (0-0.5 m) for all terrestrial vascular plants, a non-vascular stratum (0 m) for bryophytes and lichens, and a submerged stratum (&lt; 0m) for aquatic plants. Stratum membership is based on the height of perennial buds or annual seeds, therefore Herbaceous plants are considered to be the field stratum regardless of the height of the plant, unless they are established as an epiphyte in the canopy of woody plants. Taxon status as a tree is based on its potential to reach the overstory, regardless of its present height. A liana (woody vine) is able to occupy any height stratum, but on as long as it has physical support as evidence by trees or shrubs at the same height or higher. Figure 1. Overstory includes all vegetation taller than 5 m (16.4 ft), and can be subdivided into subcanopy and canopy strata at 15 m (±5 m) Figure 2. Understory includes all vegetation less than or equal to 5 m (16.4 ft), and is subdivided into a field or herb stratum at less than 0.5 m (1.6 ft) and shrub stratum at 0.5-5 m. References "],["sampling-intensity.html", "Chapter 2 Sampling Intensity Principles: 2.1 Tier 1 2.2 Tier 2 2.3 Tier 3", " Chapter 2 Sampling Intensity Principles: Our goal is to describe natural properties of vegetation. We choose protocols according to how efficiently or accurately they perform in measuring vegetation properties. Databases should be constructed around these natural properties, not around protocols. Our descriptions are independent of aspirations of the land owner (land use) and regulatory status of vegetation. Though we may accommodate different users who need specific properties to be measured, we do not need to know how a given user would use the data in order for the minimum data set to be collected. All vegetation will share a basic set of natural properties, while some other properties may be life form specific (e.g. stem diameter and basal area for trees). All vegetation has three classes of properties: species composition; an abundance measure; and a structure or height value. Abundance measures can be canopy cover, foliar cover, biomass, and frequency, but each is a different property which may entail different protocols to measure. USNVC considers canopy cover is the most universal form of abundance to record, while other forms of abundance are favored by specialized end users. Adjusting the intensity and speed of vegetation inventory should consider this order of priority. The order of importance is: Species identity Abundance Structure Life form and end user needs specific properties. 2.1 Tier 1 Species* (*genus for uncertain species) checklist accounting for at least 50% relative importance values (e.g. canopy cover). Life form or growth habit is mostly a property tied to species identity, which caries an emergent property to the vegetation. However, it can be substituted for species in the most uninformed vegetation descriptions Additional option for biodiversity Comprehensive species* checklist with total importance values (e.g. canopy cover) 2.2 Tier 2 Comprehensive species* checklist with canopy cover by stratum. Required strata are field, shrub, and tree according to USNVC definitions, but may be subdivided further to indicate overstory structure and recruitment. Additional option for trees Record basal area by species for dominant live trees &gt; 10 cm wide and &gt;5 m tall. May use estimate from variable radius plot. 2.3 Tier 3 Comprehensive species* checklist with canopy cover by stratum. Required strata are field, shrub, and tree according to USNVC definitions, but may be subdivided further to indicate overstory structure and recruitment. Record actual height of the top and bottom of the dominant foliage by species within each stratum, or at least the dominant stratum for each dominant species. Record basal area and range in diameters (DBH) by species should be recorded for dominant live trees &gt; 10 cm wide and &gt;5 m tall. May use estimate from variable radius plot. May use estimate from variable radius plot. Can also opt to census all tree diameters fixed area plot, but summary diameter should be equivalent to quadradic mean diameter. Additional options for dead structure Basal area should include snags &gt;10 cm wide and &gt;2 m tall. A ground surface cover transect should be used to assess down woody debris and leaf litter coverage (litter thickness?). Line-point intercepts (e.g. intervals of half a meter) can be done to estimate smaller woody debris and leaf litter, whereas a continuous line intercept may be more efficient for assaying larger woody debris (&gt; 10 cm). The two methods need to be talleyed separately before the percentage cover totals are combined. Additional options for carbon sequestration potential/productivity and grazing Biomass and/or annual biomass for productivity. Foliar cover from line-point intercept transect of vegetation less than 2 m tall. Figure 1. A compound plot consisting of a 20 by 20 m relevé, line-point intercepts, and biomass quadrats. "],["vegetation-databases.html", "Chapter 3 Vegetation Databases 3.1 VegLog MS Access Database 3.2 Vegetation Plot Object in NASIS", " Chapter 3 Vegetation Databases 3.1 VegLog MS Access Database Relevé plot data is collected in a way that optimizes efficiency and quality control in the field, but is not suitable for NASIS (National Soil Information System) in its current form. Field collection datasheet allows cover data for up to 4 strata to be recorded in a single row, ensuring that an observed plant taxon need only be listed once per plot. This avoids the need to recursively scan for the same taxon multiple times to ensure that the occupancy of each stratum is recorded appropriately. However, NASIS records each taxon-stratum incidence as independent rows. Additionally, Relevé protocol (DNR 2013) is based on SI (International System of Units) as are all soil pedon description protocols, but NASIS currently only allows for legacy protocols based on USC (US customary) units to be entered. Prior to entering data into NASIS (National Soil Information System), it is recommended that it first be entered into the custom MS Access Database VegLog. Select user name. Startup Form Site data Observed Sites Enter GSP coordinates in decimal degrees of each plot location. If need be, enter degrees, minutes, seconds at the bottom to auto calculate decimal degrees in current record. Taxon data Site (observed plants tab) Enter species list. Use genus and specific epithet autolookup fields. Enter all the cover values of each of 4 strata. The default heights are 0-0.5, 0.5-5, 5-15, and 15+ meters, but this can be adjusted. Enter basal area of taxon based on variable radius plot as determined by prism or angle gauge. May need to adjust BAF (basal area factor) if not USC BAF base 10. SI BAF 2 is also supported. Enter the maximum and minimum of observed live crown height of dominant (highest) stratum of the taxon in meters. After entering all the data for the plot, use the button to auto populate these heights to their appropriate height within stratum. Live crown heights can also be manually specified for the lower strata in the additional columns, but paper forms may not have the extra columns, and it is relatively redundant information (presence in highest stratum demonstrates capability of taxon to occupy full height range any lower stratum also present). Enter the maximum and minimum diameters (DBH - diameter at breast height) in centimeters of trees observed to fall within the basal area plot (variable radius plot). Other Vegetation details and processing Site (vegetation tab) Enter total cover for each stratum (if zero, leave blank). Synonymize Plant Taxa (assigns PLANTS symbols). Aggregate Cover to show current estimate of aggregate cover, then Transform Overstory and Transform Understory to adjust individual cover values to be more consistent with observed whole stratum cover. Reports (conversions to NASIS) Site (Reports tab) Paste to NASIS to convert to USC units and serialize taxon by stratum data. 3.2 Vegetation Plot Object in NASIS Tips: Row entries save in the local database when you advance to the next record. But if in last new row, the record needs to be saved manually with the end edit green check button at bottom of screen, prior to saving all records (upload) to the national database. After saving to the national database, remember to check in the records to unlock them for future edits. You may rearrange the columns by dragging them to reflect the datasheet that you are copying from. Create new record in Vegetation Plot table. Assign plot record to the appropriate user Site ID and observation date, or create new observation if different from pedon observation date. Name user user vegplot id the same as site id, but may append suffix of P to indicate plot, or T to indicate transect, given that the observation dates can differ and require different observation records. There are two ways to enter the species composition records: 1. By column (faster); by row. Enter species as it appears on your datasheet. You may either enter the full Latin name or enter the PLANTS symbol if you’ve conducted a lookup query in the source database where data was initially entered. If entering by column, proceed with entering each name, vertically before entering the data for other columns, using the down arrow to advance to the next new record. The same species may be entered multiple times. Take care that the sort order of the rows remains consistent with the order on your datasheet to ensure that data entered by column remains correlated properly (not a problem if completing each column of each new row horizontally). You may sort by any of the columns by pressing on the column name; to restore original order of entry, sort by Rec ID on the far right. Select the appropriate growth habit in the Plant Type Group. Every species should have a default value established that is the same regardless of the stature in existing plot record; see regional ecologist if you need a list of accepted values. For by column entry, most entries require only first one or two letters of the growth form, followed by enter, then arrow down. Select the appropriate Plant Nativity, based on whether a taxon is considered native to the state where the inventory was recorded. See BONAP to determine the nativity status. Some species are native to North America, but are considered “adventive” to a state on the BONAP website; select “introduced” in these instances. Select “unknown” for species with both native and introduced genotypes (e.g. Phalaris arundinacea). Enter all the Species Canopy Cover Percent to the nearest whole percent. If rounding down to zero, you need to select the Spp Trace Amount Flag checkbox. Advance to each record using the down arrow. For greater precision to the neared 0.1%, use akstratumcoverclasspct. If you recorded using the cover classes, speciescancovclass is also acceptable. All these cover options will be converted to strictly numeric data when analyzed later. For each species stratum entry, there is a Height Class Lower Limit and Height Class Upper Limit. These are typically based on federal government vegetation standards (FGDC 2008) lower stratum heights converted from meters to feet: 0 to 1.6; 1.6 to 16.4; 16.4 to user define limits for upper strata (e.g. 16.4 to 49.2 and 49.2 to 98.4). To ensure data integrity of original SI units, do not round to the nearest whole number. Enter Live Canopy Ht Bottom and Live Canopy Ht Top the height range of the typical crowns for current taxon within current stratum. The top height is generally going to be within the upper and lower range for the stratum. The canopy bottom can range below the range of the stratum, because the stratum only reflects the top heights of plants in that stratum, while the lowest live branches can extend below that height. Often this is only recorded for the uppermost stratum of the taxon, as it can be safely assumed that the live canopy of lower strata can encompass the whole range of the stratum over time. Enter as feet, but to ensure data integrity if recorded in the field as SI units, do not round to the nearest whole number. Enter Overstory DBH Minimum and Overstory DBH Maximum as inches converted from centimeters. To ensure data integrity of original recorded SI units, do not round to the nearest whole number. Typically, this is only recorded for trees in the uppermost stratum for the taxon. Enter Basal Area by Spp. This is typically based on tree count with a prism, multiplied by a factor. If using a USC factor ten prism, the count is multiplied by ten and entered as is. If using an SI factor two prism, you must convert it to USC; this is less common due to a shortage of SI equipment domestically. To ensure data integrity if originally recorded using SI units, do not round to the nearest whole number. Other remaining columns are optional Vegetation Strata Level only recognizes overstory and understory. If using this column, the overstory strata are those more than 5 m or 16.4 ft. Spp DBH Average is really the quadratic mean diameter if you use a prism to select trees to measure. You can enter each tree diameter individually, but this would need to go into the Plot Tree Inventory table. References "],["vegetation-analysis.html", "Chapter 4 Vegetation Analysis 4.1 Plot Data Schema 4.2 Missing Data 4.3 Aggregating Cover", " Chapter 4 Vegetation Analysis 4.1 Plot Data Schema Several vegnasis functions require data frames with a predefined standard set of column names to operate. The pre.fill.veg() was designed to allow the user to process any data frame by filter out extraneous data columns and append any missing columns. Prior to using this function, steps are initially taken to manually assign existing data to a standardized column names as much as possible. User has a responsibility to convert any legacy units of measure to SI (metric system) for subsequent analyses to be scaled properly. Conversions to USC units, if desired, should take place only as a final step after analysis. The clean.veg() function can read the column names as they exist in NASIS and make the appropriate assignments and unit conversions. plot = Unique identifer for plot. label = Convenient contextual name for plot. symbol = USDA PLANTS symbol. taxon = Species (binomial), and sometimes genus, subspecies, or varieties. type = Growth habit or form such as ‘tree’, ‘shrub/vine’, ‘grass/grasslike’, ‘forb’, ‘moss’, etc. nativity = ‘native’ or ‘introduced’ status within the geographic area or the plot. cover = crown or canopy cover (not the same as foliar cover). stratum.min = minimum height range (m) of stratum considered to be occupied by this taxon. stratum.max = maximum height range (m) of stratum considered to be occupied by this taxon. crown.min = bottom height (m) of live canopy for members of this taxon occupying this stratum. crown.max = top height (m) of live canopy for members of this taxon occupying this stratum. dbh.min = minimum diameter (cm) of trees measured (usually at “breast height”, 1.37 or 1.4 m above the grown, a.k.a. ‘DBH’). dbh.max = maximum diameter (cm) of trees measured (usually at “breast height”, 1.37 or 1.4 m above the grown, a.k.a. ‘DBH’). Mean diameter (cm) of all trees measured using a variable radius plot (BA prism) is the same as quadratic mean diameter of all trees within a fixed plot. BA = basal area (square meters per hectare). In lieu of the complete set of diameters, the maximum and minimum diameter can be used to estimate the quadratic mean diameter, which is used to determine stand density with basal area. library(vegnasis) obsite &lt;- c(&#39;plot1&#39;,&#39;plot1&#39;,&#39;plot1&#39;, &#39;plot2&#39;, &#39;plot2&#39;) obsspp &lt;- c(&#39;Acer rubrum&#39;,&#39;Pinus strobus&#39;,&#39;Pteridium aquilinum&#39;, &#39;Lindera benzoin&#39;, &#39;Trillium grandiflorum&#39;) abund &lt;- c(80,10,30,10,10) mydata &lt;- data.frame(obsite=obsite, obsspp=obsspp, abund=abund) #Identify columns containing data corresponding to standard column names. mydata &lt;- mydata |&gt; mutate(taxon=obsspp, cover=abund, plot=obsite) veg &lt;- mydata |&gt; pre.fill.veg() knitr::kable( head(veg, 10), booktabs = TRUE, caption = &#39;A table of rudimentary veg data.&#39; ) Table 4.1: A table of rudimentary veg data. plot label symbol taxon type nativity cover stratum.min stratum.max crown.min crown.max dbh.min dbh.max BA plot1 NA NA Acer rubrum NA NA 80 NA NA NA NA NA NA NA plot1 NA NA Pinus strobus NA NA 10 NA NA NA NA NA NA NA plot1 NA NA Pteridium aquilinum NA NA 30 NA NA NA NA NA NA NA plot2 NA NA Lindera benzoin NA NA 10 NA NA NA NA NA NA NA plot2 NA NA Trillium grandiflorum NA NA 10 NA NA NA NA NA NA NA 4.2 Missing Data Several function in vegnasis were created to fill in missing data in either a NASIS import, or a user constructed data set. In many cases, there is a data frame and a vector version of the same function, depending on whether there is “.df” suffix. fill.hts.df() Function consolidates recorded plant height data and fills in missing values based on taxon or growth habit depending on what type of height data is missing. This function requires a data frame with standardized column names. fill.nativity.df() This function fills in missing nativity data based taxon status across broad regions of North America. Taxon may still be introduced (or adventive) within a state in that region, but native considering the area collectively. If a region is not specified, the default is the nativity across the United States. This version of the function take a vegetation plot data frame (cleaned by the clean.veg function) as input. fill.taxon.from.symbols() This function fills in missing plant names from USDA symbols if they exist. fill.type.df() Lookup the NASIS life form “type” according to default growth habit of each taxon. Include column of existing types if existing types are to be preserved while filling in only missing values. Output is a vector that can be used to populate the plant “type”” column. fill.usda.symbols() This function fills in missing USDA PLANTS symbols, assuming that the concept behind the names being used are not misapplied homonyms (auct non). If existing symbols are provided (optional), priority is given to existing symbols, while only missing data is replaced. # remotes::install_github(&quot;phytoclast/vegnasis&quot;, dependencies = FALSE) veg &lt;- veg |&gt; fill.type.df() |&gt; fill.hts.df() |&gt; fill.nativity.df() |&gt; mutate(symbol = fill.usda.symbols(taxon)) knitr::kable( head(veg, 10), booktabs = TRUE, caption = &#39;A table of rudimentary veg data.&#39; ) Table 4.2: A table of rudimentary veg data. plot label symbol taxon type nativity cover ht.min ht.max stratum.min stratum.max crown.min crown.max dbh.min dbh.max BA stand.max taxon.max plot1 NA ACRU Acer rubrum tree native 80 0 0 NA NA NA NA NA NA NA 0 30.0 plot1 NA PIST Pinus strobus tree native 10 0 0 NA NA NA NA NA NA NA 0 60.0 plot1 NA PTAQ Pteridium aquilinum forb native 30 0 0 NA NA NA NA NA NA NA 0 2.0 plot2 NA LIBE3 Lindera benzoin shrub/vine native 10 0 0 NA NA NA NA NA NA NA 0 4.0 plot2 NA TRGR4 Trillium grandiflorum forb native 10 0 0 NA NA NA NA NA NA NA 0 0.2 4.3 Aggregating Cover Appendix K in the USNVC (FGDC (2008)) presents a formula intended to combine cover values of multiple strata without exceeding 100%. \\[C_i = (1 - \\prod_{j=1}^n(1-\\frac{cover_j}{100}))*100\\] This is useful for many operations when combining strata or aggregating structure within a stratum. When assessing total canopy cover for a stand, individual cover values may sum greater than 100%, yet an independent assessment of cover doesn’t exceed 100%. Conversely, amount of open sky (not filtered by a crown outline) cannot be negative. More simply stated as a formula that can be plugged into RStudio: cover = c(10, 20) 100*(1-10^(sum(log10(1-(cover/100))))) ## [1] 28 cover = c(5, 10, 20, 30, 40) 100*(1-10^(sum(log10(1-(cover/100))))) ## [1] 71.272 Whereas a simple sum is similar to the formula when adding two small values and exceeds 100% with adding more or higher values: cover = c(10, 20) sum(cover) ## [1] 30 cover = c(5, 10, 20, 30, 40) sum(cover) ## [1] 105 The formula allows for random crown overlap, which is minimal at low density, but increases with density as total aggregated cover approaches 100%. As such, the function vegnasis::cover.agg() is used within many different functions that combine species or stratum cover. But in reality, crowns in the same stratum avoid each other, and cover in the understory tends to correlate with gaps (avoiding shade). The effect of crown overlap versus competition is illustrated when considering a stand of trees and treating each tree as an independent species. For and area of 16 ha (400 by 400 m), 1500 trees with crown diameters of 10 m have a potential to cover 73.6% of the area. If planted at random and allowed to overlap, about 52.1% of the area is predicted by the formula, close to a simulated value of 52.0%. Figure 1. 1500 Random trees with crowns 10 m in diameter are predicted to cover 52.1% of the area. However, if an equidistant hexagonal grid is established which gives priority to planting trees further apart, the total cover does not aggree with the formula. Figure 1. Weighted Hexagonal Grid Trees semi-randomly planted at 1500 per 16 ha (and crowns of 10 m in diameter), simulating crown competition, cover 66.2% of the area, intermediate between the formula’s predicted 52.1% and the maximum potential area of 73.6%. Figure 1. 1500 Non-random trees with crowns 10 m in diameter cover 66.2% of the area. For most natural settings, when the only a few cover values are to be aggregated and for which there is a big difference in cover, the default formula by vegnasis::cover.agg() is adequate. But other applications where the need is to predict the total cover of multiple individuals competing in the same stratum, an alternative formulation by vegnasis::cover.agg.stratum() is given which averages the expected sum (maximum capped at 100%) and the default formula. References "],["composition.html", "Chapter 5 Composition 5.1 Data Processing 5.2 Harmonizing Taxa 5.3 Associations 5.4 Cluster Analysis", " Chapter 5 Composition This analysis using vegnasis package explores vegetation composition. 5.1 Data Processing # remotes::install_github(&quot;phytoclast/vegnasis&quot;, dependencies = FALSE) library(vegnasis) library(ggplot2) veg.raw &lt;- vegnasis::nasis.veg # With a connection to NASIS via soilDB... # veg.raw &lt;- soilDB::get_vegplot_species_from_NASIS_db() #Clean data veg &lt;- clean.veg(veg.raw) #Select only Wexford County Michigan records, and exclude imprecise non bionomial (genus or family) records by requiring a blank space in the name. veg &lt;- veg |&gt; subset(grepl(&#39;MI165&#39;,plot) &amp; grepl(&#39;[[:blank:]]&#39;,taxon)) #These tasks fill in missing plant &#39;types&#39; and establishes the crown heights based on user inputs of stratum, live canopy heights, and taxon norms when user data is missing. veg &lt;- veg |&gt; fill.type.df() |&gt; fill.hts.df() knitr::kable( head(veg, 10), booktabs = TRUE, caption = &#39;A table of the first 10 rows of the veg data.&#39; ) Table 5.1: A table of the first 10 rows of the veg data. plot label symbol taxon type nativity cover ht.min ht.max stratum.min stratum.max crown.min crown.max dbh.min dbh.max BA stand.max taxon.max 253 2022MI165020.P NA VAAN Vaccinium angustifolium shrub/vine native 7.0 0.1 0.3 0.0 0.5 NA 0.3 NA NA NA 30 0.5 254 2022MI165020.P NA QURU Quercus rubra tree native 5.0 5.0 20.0 15.0 30.0 5 20.0 NA NA NA 30 35.0 255 2022MI165020.P NA QUAL Quercus alba tree native 0.2 0.4 0.8 0.5 5.0 NA 0.8 NA NA NA 30 35.0 256 2022MI165020.P NA QUAL Quercus alba tree native 1.0 0.2 0.5 0.0 0.5 NA NA NA NA NA 30 35.0 257 2022MI165020.P NA PTAQ Pteridium aquilinum forb native 75.0 0.5 1.0 0.0 0.5 NA 1.0 NA NA NA 30 2.0 258 2022MI165020.P NA PRSE2 Prunus serotina tree native 1.0 3.0 6.0 5.0 15.0 NA 6.0 NA NA NA 30 35.0 259 2022MI165020.P NA PRSE2 Prunus serotina tree native 0.2 0.2 0.5 0.0 0.5 NA NA NA NA NA 30 35.0 260 2022MI165020.P NA PLSC70 Pleurozium schreberi moss native 90.0 0.0 0.0 0.0 0.5 NA 0.0 NA NA NA 30 0.0 261 2022MI165020.P NA PIBA2 Pinus banksiana tree native 56.0 8.0 17.0 15.0 30.0 8 17.0 16 22 23 30 25.0 262 2022MI165020.P NA PIBA2 Pinus banksiana tree native 9.0 7.5 15.0 5.0 15.0 NA NA NA NA NA 30 25.0 5.2 Harmonizing Taxa When combining data from multiple sources, the possibility exists that the ecologist used a different scientific name for a taxon. Before conducting cluster analysis, it is wise to harmonize the taxonomy. harmonize.taxa() This function synonymizes taxa with BONAP or for Mexican only plants, Kew’s Plants of the World Online circa 2022, and returns a binomial. Assuming that the ecologist has the correct concept for the plant while in the field, and is using a legitimate name for that concept, the name can be synonymized. This ensures that various vegetation summarizing functions work off a shared taxonomic backbone, and not misconstrue synonyms as plant diversity. 5.3 Associations #This function ranks each taxon by cover and retains the top 2-5 taxa, with fewer taxa retained with greater unequal dominance. Taxa are separated by &#39;/&#39; when different stratum, and &#39;-&#39; when in the same stratum. veg.associations &lt;- veg |&gt; get.assoc() knitr::kable( veg.associations, booktabs = TRUE, caption = &#39;A table with the top 2-5 taxa organized by stratum of each plot.&#39; ) Table 5.2: A table with the top 2-5 taxa organized by stratum of each plot. plot association 2022MI165001.P Populus grandidentata/Pteridium aquilinum 2022MI165002.P Acer rubrum/Fagus grandifolia 2022MI165003.P Acer rubrum/Fagus grandifolia 2022MI165004.P Quercus rubra/Fagus grandifolia/Pteridium aquilinum 2022MI165005.P Populus tremuloides/Carex bromoides-Athyrium angustum 2022MI165006.P Acer saccharum/Fagus grandifolia/Erythronium americanum 2022MI165007.P Quercus rubra-Tsuga canadensis/Acer rubrum/Ostrya virginiana 2022MI165008.P Fagus grandifolia-Acer saccharum/Erythronium americanum 2022MI165009.P Acer saccharum/Allium tricoccum 2022MI165010.P Pinus resinosa/Deschampsia flexuosa-Vaccinium angustifolium/Dicranum polysetum-Pleurozium schreberi 2022MI165011.P Quercus velutina/Carex pensylvanica 2022MI165012.P Quercus alba/Pinus strobus/Carex pensylvanica-Pteridium aquilinum-Gaultheria procumbens 2022MI165013.P Quercus alba/Pteridium aquilinum 2022MI165014.P Pinus resinosa/Vaccinium angustifolium-Pteridium aquilinum 2022MI165015.P Pinus strobus/Solidago gigantea-Maianthemum stellatum 2022MI165016.P Pinus resinosa/Quercus alba/Vaccinium angustifolium-Pteridium aquilinum 2022MI165017.P Pinus resinosa-Pinus strobus/Carex pensylvanica-Pteridium aquilinum 2022MI165018.P Acer rubrum-Quercus alba/Hamamelis virginiana-Prunus serotina/Pteridium aquilinum 2022MI165019.P Acer rubrum-Quercus rubra/Fagus grandifolia/Amelanchier arborea/Pteridium aquilinum-Carex pensylvanica-Maianthemum canadense 2022MI165020.P Pinus banksiana/Pteridium aquilinum-Carex pensylvanica/Pleurozium schreberi 2022MI165021.P Pinus resinosa/Pteridium aquilinum 2022MI165022.P Pinus resinosa/Pteridium aquilinum 2022MI165023.P Pinus strobus-Acer rubrum-Tsuga canadensis/Dryopteris carthusiana-Glyceria striata-Solidago gigantea-Coptis trifolia 2022MI165024.P Acer rubrum-Quercus rubra/Pinus strobus/Carex pensylvanica 2022MI165025.P Pinus strobus/Fagus grandifolia/Deschampsia flexuosa-Carex pensylvanica 2022MI165026.P Acer rubrum/Prunus serotina/Carpinus caroliniana-Quercus alba/Carex stricta 2022MI165027.P Acer rubrum/Fagus grandifolia 2022MI165028.P Acer saccharum-Tilia americana 2022MI165029.P Acer saccharum/Ostrya virginiana 2022MI165030.P Acer rubrum/Pteridium aquilinum 2022MI165031.P Acer rubrum/Thuja occidentalis/Alnus incana/Vaccinium myrtilloides 2022MI165032.P Acer rubrum-Tsuga canadensis 2022MI165033.P Tilia americana/Acer saccharinum/Carpinus caroliniana/Carex stricta 2022MI165034.P Acer saccharum/Carpinus caroliniana 5.4 Cluster Analysis #Create plot matrix, based log transformed relative cover values. m &lt;- veg |&gt; make.plot.matrix(tr = &#39;log&#39;, rc = TRUE) knitr::kable( m[1:10,1:10], booktabs = TRUE, caption = &#39;A table of the first 10 rows of the community data matrix.&#39; ) Table 5.3: A table of the first 10 rows of the community data matrix. Abies.balsamea Acer.rubrum Acer.saccharinum Acer.saccharum Achillea.millefolium Adiantum.pedatum Agrimonia.gryposepala Allium.tricoccum Alnus.incana Alnus.rugosa 2022MI165001.P 0.0098231 0.2735230 0 0.0000000 0 0 0 0.0000000 0 0 2022MI165002.P 0.0000000 0.7695928 0 0.0000000 0 0 0 0.0000000 0 0 2022MI165003.P 0.0246233 0.5401819 0 0.0000000 0 0 0 0.0000000 0 0 2022MI165004.P 0.0000000 0.0015488 0 0.0015488 0 0 0 0.0000000 0 0 2022MI165005.P 0.0000000 0.0353465 0 0.0000000 0 0 0 0.0000000 0 0 2022MI165006.P 0.0000000 0.0000000 0 0.5647917 0 0 0 0.0000000 0 0 2022MI165007.P 0.0000000 0.1868105 0 0.0501600 0 0 0 0.0000000 0 0 2022MI165008.P 0.0000000 0.0016694 0 0.2704181 0 0 0 0.0000000 0 0 2022MI165009.P 0.0000000 0.0016849 0 0.7854276 0 0 0 0.2505727 0 0 2022MI165010.P 0.0000000 0.0050284 0 0.0000000 0 0 0 0.0000000 0 0 #distance matrix based on Bray-Curtis simularity. d = vegan::vegdist(m, method=&#39;bray&#39;) #Cluster analysis using Ward&#39;s method using distance matrix. t &lt;- cluster::agnes(d, method = &#39;ward&#39;)|&gt; as.hclust() #Define number of groups to color the dendrogram by. k = 3 groups &lt;- cutree(t, k = k) #This function rearranges the branchs and groups so that the tree is always oriented with most nested branches to the bottom of the plot (when tree oriented vertically with branches to the right). groups &lt;- dendrogrouporder(t, groups) a = &#39;Vegetation of Wexford County&#39; plot.dendro(a,d,t,groups) Figure 5.1: Dendrogram of selected plots "],["structure.html", "Chapter 6 Structure 6.1 Data Processing 6.2 Structure Summary 6.3 Structure Profile 6.4 Functional Vegetation Attributes 6.5 Ternary Plot of Structure", " Chapter 6 Structure This analysis using vegnasis package explores vegetation structure. 6.1 Data Processing # remotes::install_github(&quot;phytoclast/vegnasis&quot;, dependencies = FALSE) library(vegnasis) library(ggplot2) veg.raw &lt;- vegnasis::nasis.veg # With a connection to NASIS via soilDB... # veg.raw &lt;- soilDB::get_vegplot_species_from_NASIS_db() veg &lt;- clean.veg(veg.raw) #These tasks fill in missing plant &#39;types&#39; and establishes the crown heights based on user inputs of stratum, live canopy heights, and taxon norms when user data is missing. veg &lt;- veg |&gt; fill.type.df() |&gt; fill.hts.df() #Select only Wexford County Michigan records. veg &lt;- veg |&gt; subset(grepl(&#39;MI165&#39;,plot)) 6.2 Structure Summary veg.structure &lt;- veg |&gt; get.structure() knitr::kable( veg.structure, booktabs = TRUE, caption = &#39;A table with estimating structure of each plot.&#39; ) Table 6.1: A table with estimating structure of each plot. plot tree shrub herb moss ht.max structure 2022MI165001.P 95.3 17.8 15.4 0.0 20 forest 2022MI165002.P 95.1 4.5 8.7 0.0 20 forest 2022MI165003.P 90.1 15.0 16.6 5.9 20 forest 2022MI165004.P 95.0 77.2 13.2 0.0 21 forest 2022MI165005.P 29.6 7.3 94.4 0.0 31 woodland 2022MI165006.P 80.0 99.1 11.0 0.0 26 forest 2022MI165007.P 95.2 27.6 2.2 0.0 31 forest 2022MI165008.P 95.0 77.5 10.7 0.0 29 forest 2022MI165009.P 95.0 26.1 52.8 0.0 31 forest 2022MI165010.P 70.3 54.4 68.3 64.0 25 forest 2022MI165011.P 79.5 26.2 87.0 5.0 20 forest 2022MI165012.P 30.2 40.7 73.9 0.0 24 woodland 2022MI165013.P 54.5 86.0 56.7 0.0 19 woodland 2022MI165014.P 70.2 69.4 49.3 10.7 21 forest 2022MI165015.P 14.5 43.0 82.6 0.0 23 savanna 2022MI165016.P 80.4 62.5 46.9 2.0 24 forest 2022MI165017.P 36.0 82.4 30.7 2.0 20 woodland 2022MI165018.P 74.6 70.2 31.3 0.0 25 forest 2022MI165019.P 91.4 45.1 46.7 0.2 35 forest 2022MI165020.P 64.2 20.9 87.9 90.5 20 forest 2022MI165021.P 73.2 37.4 73.9 5.9 25 forest 2022MI165022.P 72.2 22.8 55.5 0.0 26 forest 2022MI165023.P 72.2 22.3 75.5 0.2 35 forest 2022MI165024.P 78.7 39.2 85.3 0.0 27 forest 2022MI165025.P 60.6 24.9 88.2 5.0 22 forest 2022MI165026.P 31.9 77.4 95.1 0.0 20 woodland 2022MI165027.P 98.6 20.8 4.2 0.0 30 forest 2022MI165028.P 95.6 39.8 8.0 0.0 22 forest 2022MI165029.P 95.2 57.0 7.4 0.0 26 forest 2022MI165030.P 95.2 5.0 29.2 0.0 20 forest 2022MI165031.P 98.6 42.8 18.3 0.2 21 forest 2022MI165032.P 97.9 15.5 20.1 0.0 26 forest 2022MI165033.P 79.9 42.0 99.3 0.0 22 forest 2022MI165034.P 91.8 57.8 0.6 0.0 30 forest 6.3 Structure Profile veg.str &lt;- summary.crown.thickness(veg, breaks = c(c(-1:9)/10,c(2:100)/2)) |&gt; structure.fill.zero() |&gt; subset(type %in% c(&#39;tree&#39;, &#39;shrub/vine&#39;, &#39;grass/grasslike&#39;, &#39;forb&#39;)) veg.str.pct &lt;- veg.str |&gt; group_by(type, stratum, stratum.label, bottom, top) |&gt; summarise(X25 = quantile(Cover, 0.25), X50 = quantile(Cover, 0.5), X75 = quantile(Cover, 0.75)) knitr::kable( head(veg.str, 25), booktabs = TRUE, caption = &#39;A table of the first 25 rows of the veg.str data.&#39; ) Table 6.2: A table of the first 25 rows of the veg.str data. plot type stratum stratum.label bottom top Cover 2022MI165001.P forb 3 0-0.1 0.0 0.1 6.9 2022MI165001.P forb 4 0.1-0.2 0.1 0.2 7.0 2022MI165001.P forb 5 0.2-0.3 0.2 0.3 1.2 2022MI165001.P forb 6 0.3-0.4 0.3 0.4 1.0 2022MI165001.P forb 7 0.4-0.5 0.4 0.5 1.0 2022MI165001.P forb 8 0.5-0.6 0.5 0.6 6.9 2022MI165001.P forb 9 0.6-0.7 0.6 0.7 6.0 2022MI165001.P forb 10 0.7-0.8 0.7 0.8 6.0 2022MI165001.P forb 11 0.8-0.9 0.8 0.9 6.0 2022MI165001.P forb 12 0.9-1 0.9 1.0 6.0 2022MI165001.P forb 13 1-1.5 1.0 1.5 6.0 2022MI165001.P grass/grasslike 3 0-0.1 0.0 0.1 0.0 2022MI165001.P grass/grasslike 4 0.1-0.2 0.1 0.2 0.0 2022MI165001.P grass/grasslike 5 0.2-0.3 0.2 0.3 2.2 2022MI165001.P grass/grasslike 6 0.3-0.4 0.3 0.4 2.2 2022MI165001.P grass/grasslike 7 0.4-0.5 0.4 0.5 2.2 2022MI165001.P grass/grasslike 8 0.5-0.6 0.5 0.6 2.2 2022MI165001.P grass/grasslike 9 0.6-0.7 0.6 0.7 0.0 2022MI165001.P grass/grasslike 10 0.7-0.8 0.7 0.8 0.0 2022MI165001.P grass/grasslike 11 0.8-0.9 0.8 0.9 0.0 2022MI165001.P grass/grasslike 12 0.9-1 0.9 1.0 0.0 2022MI165001.P grass/grasslike 13 1-1.5 1.0 1.5 0.0 2022MI165001.P grass/grasslike 14 1.5-2 1.5 2.0 0.0 2022MI165001.P shrub/vine 3 0-0.1 0.0 0.1 0.0 2022MI165001.P shrub/vine 4 0.1-0.2 0.1 0.2 3.2 ggplot(veg.str.pct, aes(x = top, y = X50, col=type)) + # plot median geom_line() + # plot quantiles geom_ribbon(aes(ymin = X25, ymax = X75, x = top, fill=type), alpha = 0.2) + coord_flip() + theme(legend.position = &quot;none&quot;)+ scale_x_continuous(name=&#39;height (m)&#39;, breaks=c(0:100)*5, minor_breaks = NULL, limits = c(0,40))+ scale_y_continuous(name=&#39;cover&#39;)+ facet_wrap(~ type, scales = &quot;free_x&quot;, nrow=1) Figure 6.1: Structure of plot collection. #Custom transformation as a function passing a parameter to existing function. Default sigma of trans = &#39;pseudo_log&#39; is 1, so in this case, calling the custom function with sigma = 1 is the same as calling trans = &#39;pseudo_log&#39;. Call custom transformation as trans = &#39;ps2&#39;. Ggplot appends &#39;_trans&#39; to the name of the function called, so our function needs to have this appended to its name. But in this data set, trans=&#39;sqrt&#39; is preferable as it doesn&#39;t overly compress the highest canopy. ps2_trans &lt;- function() { scales::pseudo_log_trans(sigma = 1) } ggplot(veg.str.pct, aes(x = top, y = X50, col=type)) + # plot median geom_line() + # plot quantiles geom_ribbon(aes(ymin = X25, ymax = X75, x = top, fill=type), alpha = 0.2) + coord_flip() + theme(legend.position = &quot;none&quot;)+ scale_x_continuous(name=&#39;height (m)&#39;, breaks=c(c(0:4),c(1:100)*5), minor_breaks = NULL, limits = c(0,40), trans = &#39;sqrt&#39;)+ scale_y_continuous(name=&#39;cover&#39;)+ facet_wrap(~ type, scales = &quot;free_x&quot;, nrow=1) Figure 6.2: Structure of plot collection, rescaled. 6.4 Functional Vegetation Attributes A couple of other properties of vegetation to consider is wetness and percent introduced flora. exo.flora() This function determines the percentage cover consisting of flora introduced to the region (presumably since 1492). Can be useful in classifying plots with a high invaded status. Based on state level nativity generalized to regions. If a region is not given, a default nativity for the whole US will be assumed. get.wetness() Function gets mean indicator status, ranging from 0 (all upland) to 1 (all obligate wetland), based on taxon identity and region. If region is not supplied, hydric status will be based on the mean status for all regions rating the taxon. get.habit.code() This function looks up a default growth habit (“life form”) code for a taxon. Codes are modified from Appendix E of the US National Vegetation Classification (FGDC (2008)). The first letters indicate stem persistence and height potential: H = Herbs (rooted forbs and graminoids inclusive); S = Shrubs, free standing woody plants normally &lt; 5 m tall when mature; T = Trees, free standing woody plants normally &gt; 5 m tall when mature; L = Lianas and woody vines normally rooted in the ground and dependent on other plants for structural support; E = Epiphytes normally not rooted in the ground, established in the branches or trunks of other plants (mostly trees) – can be either parasitic or autotrophic, and includes both woody and herbaceous examples; N = Nonvascular autotrophs, including bryophytes, lichens, and algae. Most of the time when nonvascular autotrophs are listed in a plot, it is due to their dominance in the ground stratum, however any positive height attributed to the plants should be assumed to be indicate an epiphytic position within the shrub tree stratum, and not the stature of the plant itself, which is always arbitrarily assigned a zero height when on the ground even if some mosses do approach 0.1 m tall. A significant departure from USNVC is an insertion of a number after “H”, “S”, and “T” to distinguish between:“H1” annuals; “H2” perennials and biennials; “S1” subshrubs and dwarf shrubs; “S2” medium and tall shrubs; “T1” dwarf trees; “T2” medium and tall trees. Physiognomy After first letter and size modifier, secondary letters correspond to leaf persistence and size. Some of these include: BE = Broadleaf evergreen. BD = Broadleaf deciduous. NE = Broadleaf evergreen. ND = Broadleaf deciduous. F = Forb. FE = Seedless forb (fern ally). FV = Herbaceous vine. GC = Cool season (C3) graminoid. GW = Warm season (C4) graminoid. These Characteristics can be used to calculate functional differences among plots. veg$habitcode &lt;- get.habit.code(veg$taxon) veg &lt;- veg |&gt; mutate(evergreen = case_when(grepl(&#39;NE&#39;, habitcode) ~ 1, grepl(&#39;BE&#39;, habitcode) ~ 1, grepl(&#39;BD&#39;, habitcode) ~ 0, grepl(&#39;ND&#39;, habitcode) ~ 0, TRUE ~ NA_real_)) veg &lt;- veg |&gt; mutate(warmseason = case_when(grepl(&#39;GW&#39;, habitcode) ~ 1, grepl(&#39;GC&#39;, habitcode) ~ 0, TRUE ~ NA_real_)) veg.functional &lt;- veg |&gt; group_by(plot) |&gt; summarise(evergreen = weighted.mean(evergreen, cover, na.rm = TRUE), warmseason = weighted.mean(warmseason, cover, na.rm = TRUE)) knitr::kable( veg.functional, booktabs = TRUE, caption = &#39;A table of veg.functional data.&#39; ) Table 6.3: A table of veg.functional data. plot evergreen warmseason 2022MI165001.P 0.0296296 0 2022MI165002.P 0.0000000 0 2022MI165003.P 0.0314861 0 2022MI165004.P 0.0000000 NaN 2022MI165005.P 0.1732673 0 2022MI165006.P 0.0000000 NaN 2022MI165007.P 0.1533258 0 2022MI165008.P 0.0000000 0 2022MI165009.P 0.0000000 0 2022MI165010.P 0.5259259 0 2022MI165011.P 0.0710306 0 2022MI165012.P 0.7035176 0 2022MI165013.P 0.0000000 0 2022MI165014.P 0.4072398 0 2022MI165015.P 0.2161383 0 2022MI165016.P 0.5283019 0 2022MI165017.P 0.2346437 0 2022MI165018.P 0.0172043 0 2022MI165019.P 0.1772727 0 2022MI165020.P 0.6592292 0 2022MI165021.P 0.5652174 0 2022MI165022.P 0.4809287 0 2022MI165023.P 0.5984848 0 2022MI165024.P 0.2369942 0 2022MI165025.P 0.4900794 0 2022MI165026.P 0.0000000 0 2022MI165027.P 0.0000000 NaN 2022MI165028.P 0.0000000 0 2022MI165029.P 0.0000000 0 2022MI165030.P 0.0476190 NaN 2022MI165031.P 0.3791875 0 2022MI165032.P 0.6353678 NaN 2022MI165033.P 0.0000000 0 2022MI165034.P 0.0294695 0 6.5 Ternary Plot of Structure Different combinations of trees, shrubs, and herbaceous vegetation make for different structural categories. When analyzing strictly from top down, ignoring understory structure (as with remote sensing and LiDAR canopy height models), the total cover adds up to 100%. Tree and shrub cover can be reallocated and displayed on a ternary plot just like soil texture. ‘Open’ is used instead of herb cover to ensure that numbers add up to 100. library(ggtern) veg &lt;- veg |&gt; mutate(tree = ifelse(type %in% c(&#39;tree&#39;, &#39;shrub/vine&#39;) &amp; ht.max &gt; 5,cover,0), woody = ifelse(type %in% c(&#39;tree&#39;, &#39;shrub/vine&#39;),cover,0)) veg.tern &lt;- veg |&gt; group_by(plot) |&gt; summarise(tree = cover.agg(tree), woody = cover.agg(woody), shrub = woody - tree, open = 100 - woody) ggtern(veg.tern, aes(x=open, y=tree, z=shrub))+ geom_point() Figure 6.3: Ternary plot of vegetation structure. Alternatively, we can define breaks between categories and add to the background of the plot. s1 &lt;- data.frame(open = c(35,0,0), tree = c(65,100,65), shrub = c(0,0,35), group=&quot;1 forest&quot;) s2 &lt;- data.frame(open = c(25,25,0,0), tree = c(10,65,65,10), shrub = c(65,10,35,90), group=&quot;2 dense scrubby woodland&quot;) s3 &lt;- data.frame(open = c(80,25,25), tree = c(10,65,10), shrub = c(10,10,65), group=&quot;3 open scrubby woodland&quot;) s4 &lt;- data.frame(open = c(90,35,25,80), tree = c(10,65,65,10), shrub = c(0,0,10,10), group=&quot;4 open woodland/savanna&quot;) s5 &lt;- data.frame(open = c(25,25,0,0), tree = c(0,10,10,0), shrub = c(75,65,90,100), group=&quot;5 shrub thicket&quot;) s6 &lt;- data.frame(open = c(90,80,25,25), tree = c(0,10,10,0), shrub = c(10,10,65,75), group=&quot;6 open shrubland&quot;) s7 &lt;- data.frame(open = c(100,90,80,90), tree = c(0,10,10,0), shrub = c(0,0,10,10), group=&quot;7 open grassland&quot;) str.polys = rbind(s1,s2,s3,s4,s5,s6,s7) ggtern() + geom_polygon(data=str.polys, aes(fill=group, x=open, y=tree, z=shrub),alpha=0.25,size=0.1, color=&#39;black&#39;) + geom_point(data=veg.tern, aes(x=open, y=tree, z=shrub))+ scale_fill_manual(values=c(&#39;darkcyan&#39;,&#39;darkgreen&#39;,&#39;green&#39;,&#39;yellowgreen&#39;,&#39;red&#39;,&#39;orange&#39;,&#39;yellow&#39;)) + theme(legend.position=c(0,1),legend.justification=c(0,1)) + labs(fill=&quot;Vegetation Structure&quot;) Figure 6.4: Ternary plot of vegetation structure with categories. References "],["vegetation-plant-profile-diagrams.html", "Chapter 7 Vegetation Plant Profile Diagrams 7.1 Data Processing 7.2 Plot Plant Profiles", " Chapter 7 Vegetation Plant Profile Diagrams The reason vegnasis package was created in the first place is to generate pictorial drawings of vegetation structure using plant shapes. Currently, only the most basic shapes have been developed as a proof of concept: generic broadleaf, conifer, shrub, forb, graminoid, palm, and fern. Over time, it is expected that more templates would be drawn in Inkscape or similar vector drawing software, and converted to xy coordinates that can be plotted with the ggplot2 package. The graphical function simply uses the geom_polygon() element within ggplot to draw individual plants, with colors fading with distance to simulate depth. Before plotting any veg plot data, it first needs to be standardized with vegnasis::clean.veg() or vegnasis::pre.fill.veg(). It is highly recommended to limit data to a single plot before processing with vegnasis::prepare_strata(), which will create the elements needed to draw the plants with the vegnasis::veg_profile_plot() function. 7.1 Data Processing # remotes::install_github(&quot;phytoclast/vegnasis&quot;, dependencies = FALSE) library(vegnasis) library(ggplot2) veg.raw &lt;- vegnasis::nasis.veg veg &lt;- clean.veg(veg.raw) veg.select &lt;- subset(veg, grepl(&#39;2022MI165021.P&#39;,plot)) plants &lt;- prepare_strata(veg.select) 7.2 Plot Plant Profiles 7.2.1 Northern Michigan conifer forest veg.select &lt;- subset(veg, grepl(&#39;2022MI165021.P&#39;,plot)) plants &lt;- prepare_strata(veg.select) veg_profile_plot(plants) Figure 7.1: Structure of northern Michigan conifer forest. 7.2.2 Northern Michigan hardwood forest veg.select &lt;- subset(veg, grepl(&#39;2022MI165002.P&#39;,plot)) plants &lt;- prepare_strata(veg.select) veg_profile_plot(plants) Figure 7.2: Structure of northern Michigan hardwood forest. 7.2.3 Transformed Y axis veg_profile_plot(plants, &#39;sqrt&#39;, 5) Figure 7.3: Structure of a northern Michigan forest (transformed). 7.2.4 Northern Michigan mixed forest veg.select &lt;- subset(veg, grepl(&#39;2022MI165023.P&#39;,plot)) plants &lt;- prepare_strata(veg.select) veg_profile_plot(plants, unit=&#39;m&#39;, skycolor = &#39;white&#39;, fadecolor = &#39;lightgray&#39;, gridalpha = 0.1, groundcolor = &#39;darkgray&#39;) Figure 7.4: Structure of northern Michigan mixed forest. 7.2.5 Washington conifer forest veg.select &lt;- subset(veg, grepl(&#39;2021WA031024&#39;,plot)) plants &lt;- prepare_strata(veg.select) veg_profile_plot(plants, unit=&#39;m&#39;, skycolor = &#39;white&#39;, fadecolor = &#39;lightgray&#39;, gridalpha = 0.1, groundcolor = &#39;darkgray&#39;) Figure 7.5: Structure of a Washington conifer forest. 7.2.6 Generic oak savanna Many parameters can be adjusted. #Make up savanna data obsite &lt;- c(&#39;plot1&#39;) obsspp &lt;- c(&#39;Quercus macrocarpa&#39;,&#39;Pteridium&#39;, &#39;Festuca&#39;, &#39;Andropogon&#39;, &#39;Liatris&#39;) abund &lt;- c(20,10,60,10,5) hts &lt;- c(15,1,0.6,2,0.4) dbh &lt;- c(60,NA,NA,NA,NA) mydata &lt;- data.frame(obsite=obsite, obsspp=obsspp, abund=abund, hts=hts, dbh=dbh) #Identify columns containing data corresponding to standard column names. mydata &lt;- mydata |&gt; mutate(taxon=obsspp, cover=abund, plot=obsite, crown.max = hts, dbh.max = dbh) veg &lt;- mydata |&gt; pre.fill.veg() plants &lt;- prepare_strata(veg) veg_profile_plot(plants, unit=&#39;m&#39;, skycolor = rgb(0.8,0.98,1), fadecolor = &#39;lightgray&#39;, gridalpha = 0.1, groundcolor = rgb(0.55,0.45,0.2)) Figure 7.6: Structure of a generic oak savanna "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
